#!/usr/bin/python
# -*- coding: utf-8 -*-
from __future__ import print_function
import numpy as np


def get_maxvol_polyhedron(n=4):
    '''
    Arrangement of n points on a sphere in 3 dimensions
    so as to maximize the volume of the convex hull
    [1994 by R. H. Hardin, N. J. A. Sloane & W. D. Smith]
    <http://neilsloane.com/maxvolumes>
    '''
    if n == 3:
        return [[ 0.0,              0.0,   1.0],
                [ np.cos(np.pi/6),  0.0,  -0.5],
                [-np.cos(np.pi/6),  0.0,  -0.5]]
    elif n == 4:
        return [[-0.405661902390,  0.811159378849,  0.421258687973],
                [ 0.982122508809,  0.143498413265, -0.121834238060],
                [-0.426168178208, -0.161832264625, -0.890051122755],
                [-0.150292427279, -0.792825528421,  0.590626672842]]
    elif n == 5:
        return [[-0.854342356324, -0.213386876509,  0.473883084022],
                [-0.035636577755,  0.933728066273,  0.356204900891],
                [ 0.466841537505, -0.715788627043,  0.519331895746],
                [ 0.854342356324,  0.213386876509, -0.473883084022],
                [-0.431204959750, -0.217939438298, -0.875536796637]]
    elif n == 6:
        return [[ 0.149835158139,  0.876024759375,  0.458399438299],
                [-0.703942442313, -0.231042208150,  0.671628270298],
                [-0.149835158139, -0.876024759375, -0.458399438299],
                [-0.694272613153,  0.423320349306, -0.582052763551],
                [ 0.703942443244,  0.231042208150, -0.671628270298],
                [ 0.694272613153, -0.423320349306,  0.582052763551]]
    elif n == 7:
        return [[-0.769803854637,  0.594427371398, -0.232504030690],
                [ 0.277055941522, -0.786077243276,  0.552560016513],
                [ 0.247863773257,  0.614078365266,  0.749313892797],
                [ 0.968512858264, -0.175726450980, -0.176360588521],
                [-0.797282868065, -0.310096005909,  0.517861462198],
                [-0.247863773257, -0.614078365266, -0.749313892797],
                [ 0.321517923847,  0.677472324111, -0.661556855775]]
    elif n == 8:
        return [[-0.348689663224, -0.329320171848, -0.877475778572],
                [-0.954394279979, -0.286079852842,  0.085380766541],
                [-0.478289642371,  0.875325635076, -0.071021475829],
                [ 0.808627177961, -0.448270092718, -0.381019696593],
                [-0.323356098495,  0.127874336205,  0.937597454526],
                [ 0.469123193063,  0.606475616805, -0.641958530061],
                [ 0.100279277191, -0.922129240818,  0.373659909703],
                [ 0.726700025611,  0.376123776659,  0.574837347493]]
    elif n == 9:
        return [[ 0.266116746701, 0.946372889914, 0.183194512501],
                [-0.551919980906, 0.206048939377, 0.808039706200],
                [ 0.565611811355, 0.068636232987, 0.821810406633],
                [-0.841535381973,-0.539968776517, 0.015871997923],
                [-0.763986491598, 0.500843100250,-0.406793347560],
                [ 0.965976564214,-0.155803729780,-0.206432735547],
                [ 0.275923568755, 0.471332543530,-0.837682407349],
                [-0.064126674086,-0.601333519444,-0.796420596540],
                [ 0.147939835675,-0.896127680317, 0.418412458152]]
    elif n == 10:
        return [[-0.223071263172,-0.131687577814, 0.965866239741],
                [ 0.170491162688, 0.909849533811, 0.378294313326],
                [-0.495664151385, 0.587088270113,-0.640034695156],
                [-0.788849705830, 0.499826076441, 0.357617160305],
                [ 0.830410648137, 0.000526331365, 0.557151575573],
                [ 0.081077045761,-0.964178301394, 0.252560320310],
                [ 0.788849705830,-0.499826076441,-0.357617160305],
                [-0.889226578176,-0.454448841512,-0.052462768741],
                [-0.111675232649,-0.455927023664,-0.882983120158],
                [ 0.637658367865, 0.508777608164,-0.578391864896]]
    else:
        raise Exception(f'Not implemented polyhedron witn n={n}')


if __name__ == '__main__':

    from ase import Atoms
    atoms = Atoms('O6', positions=2.0*np.array(get_maxvol_polyhedron(6)))

    from ase.visualize import view
    view(atoms)

    print('See you!')

